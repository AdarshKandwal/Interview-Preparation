#include<bits/stdc++.h>
using namespace std;


void dfs(vector<int>adj[],int source, bool visited[]){
    
    visited[source]=true;
    cout<<source<<" ";
    for(int x : adj[source]){
        if(visited[x]==false)
            dfs(adj,x,visited);
    }
    
}

void dfs_helper(vector<int>adj[],int V,int source){
    bool visited[V];
    for(int i=0;i<V;i++)visited[i]=false;
    
    for(int i=0;i<V;i++)
        if(visited[i]==false)
            dfs(adj,i,visited);
    
}


void addEdge(vector<int> adj[], int u,int v){
    adj[u].push_back(v);
    adj[v].push_back(u);
}

int main(){
    
   	int V=5;
	vector<int> adj[V];
	
 	addEdge(adj,0,1); 
	addEdge(adj,0,2); 
	addEdge(adj,1,2);
	addEdge(adj,3,4);

    dfs_helper(adj,V,0);
    

    return 0;
}