#include<bits/stdc++.h>
using namespace std;

struct Node{
    int key;
    Node *left;
    Node *right;
    int lcount;
    Node(int x){
        key=x;
        left=right=NULL;
        lcount=0;
    }
};

Node *insert(Node *root ,int x){
    
    if(root == NULL)
        return new Node(x);
    if(root->key<x)
        return insert(root->left,x);
    if(root->key>x)
        return insert(root->right,x);
    
    return root;
}

bool isBST(Node *root,int min,int max){
    if(root ==NULL)
        return true;
    return(root->key>min && root->key<max && isBST(root->left,min,root->key)&& isBST(root->right,root->key,max));
}

bool isBSTInorder(Node *root){
    if(root==NULL)
        return true;
    if(isBSTInorder(root->left)==false)return false;
    
    if(root->key<=prevv)return false;
    prevv=root->key;
    
    return isBSTInorder(root->right);
}

int main(){
    
    Node* root = NULL;
    int keys[] = { 4,2,5,1,3};
 
    for (int x : keys)
        root = insert(root, x);
    if (isBST(root,INT_MIN,INT_MAX))
        cout<<"IS BST";
    
 
    return 0;
    
}
